## -*- mode:ulam -*-
#=t41063_test_compiler_element_quarkancestorfuncreturnvalue_questioncolon
##
## gen output: 2 asserts
##
#!
Exit status: 0
Ue_Foo : Qbar { :< Int(3) m_q(2); > Qbar m_qbar( Int(3) m_q(1); );  Int(32) test() {  System s;  m_q 2 = Qbar myqbar = ( true )func;  s ( myqbar m_q . 2 == )assert . Qbar qbar2 = m_q 2 == ?  m_qbar :  myqbar;  s ( qbar2 m_q . 1 cast == )assert . 0 cast return } }
Uq_Qbar { Int(3) m_q( 1);  <NOMAIN> }
Uq_System { <NOMAIN> }
##
## informed by t41033, Dave email 2/10/2017 and t41031; also data member case for questioncolon non-ref
##
#>Foo.ulam
  ulam 3;
element Foo : Qbar
{
  Qbar m_qbar;
  Int test() {
    System s;
    m_q = 2; //self
    Qbar myqbar = func(true);
    s.assert(myqbar.m_q == 2);

    //test questioncolon non-ref with data member
    Qbar qbar2 = m_q == 2 ? m_qbar : myqbar;
    s.assert(qbar2.m_q == 1);
    return 0;
  }
}

#:Qbar.ulam
  ulam 3;
quark Qbar {
  Int(3) m_q = 1;
  Self func(Bool barg)
  {
    //Qbar qb;
    return barg ? (Qbar) self : makeQB();
  }
  Self makeQB()
  {
    Qbar qb;
    return qb;
  }
}

#:System.ulam
  ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}

#.
