## -*- mode:ulam -*-
#=t3815_test_compiler_transientarraywithelementarrayref_memberselect_error
#!
./R.ulam:13:19: ERROR: Member selected must be a Class, not type: A[3].
./R.ulam:13:5: ERROR: Initial value expression for: fa3, initialization is invalid.
./R.ulam:13:5: ERROR: Storage expression for: fa3, is invalid.
Unrecoverable Program Type Label FAILURE.
##
## similar to 3814, except array ref of element array data member is not specified completely
##
#>R.ulam
  ulam 2;
use System;
use A;
element R {
  Bool b, c;

  Int test(){
    System s;
    QW qw;
    A ar[3];

    typedef Foo FA3[3];
    FA3& fa3 = ar.mFoo; //not possible! needs error
    fa3[2].setTre(1u);
    b = qw.eunc(fa3[2]);
    s.assert(b);

    Foo& fr = fa3[1];
    fr.setTre(2u);
    c = qw.eunc(fr);
    s.assert(c);
    return 0;
  }
}

#:A.ulam
  ulam 2;
use QW;
transient A : QW {
  Bool(7) sp;
  Foo mFoo[3];
  Void setsp()
  {
    sp = true;
  }
}

#:QW.ulam
  ulam 2;
quark QW {
  Bool func(A& aarg)
  {
    return aarg.sp;
  }
  Bool eunc(Foo& aarg)
  {
    return (aarg.mTre > Unary(3).minof && aarg.mTre < Unary(3).maxof);
  }
}

#:Foo.ulam
  ulam 2;
element Foo {
  Unary(3) mTre;
  Void setTre(Unary(3) uarg)
  {
    mTre = uarg;
  }
}


#:System.ulam
ulam 1;
quark System {
Void print(Unsigned arg) native;
Void print(Int arg) native;
Void print(Int(4) arg) native;
Void print(Int(3) arg) native;
Void print(Unary(3) arg) native;
Void print(Bool(3) arg) native;
Void assert(Bool b) native;
}
#.
